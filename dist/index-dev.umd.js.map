{"version":3,"file":"index-dev.umd.js","sources":["../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/memoize-one/dist/memoize-one.esm.js","../src/timer.js","../src/createListComponent.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../src/VariableSizeList.js","../src/FixedSizeList.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../src/shallowDiffers.js","../src/areEqual.js","../src/shouldComponentUpdate.js"],"sourcesContent":["export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var lastThis;\n    var lastArgs = [];\n    var lastResult;\n    var calledOnce = false;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n            return lastResult;\n        }\n        lastResult = resultFn.apply(this, newArgs);\n        calledOnce = true;\n        lastThis = this;\n        lastArgs = newArgs;\n        return lastResult;\n    }\n    return memoized;\n}\n\nexport default memoizeOne;\n","// @flow\n\n// Animation frame based implementation of setTimeout.\n// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js\n\nconst hasNativePerformanceNow =\n  typeof performance === 'object' && typeof performance.now === 'function';\n\nconst now = hasNativePerformanceNow\n  ? () => performance.now()\n  : () => Date.now();\n\nexport type TimeoutID = {|\n  id: AnimationFrameID,\n|};\n\nexport function cancelTimeout(timeoutID: TimeoutID) {\n  cancelAnimationFrame(timeoutID.id);\n}\n\nexport function requestTimeout(callback: Function, delay: number): TimeoutID {\n  const start = now();\n\n  function tick() {\n    if (now() - start >= delay) {\n      callback.call(null);\n    } else {\n      timeoutID.id = requestAnimationFrame(tick);\n    }\n  }\n\n  const timeoutID: TimeoutID = {\n    id: requestAnimationFrame(tick),\n  };\n\n  return timeoutID;\n}\n","// @flow\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\n\nimport { cancelTimeout, requestTimeout } from './timer';\n\nimport type { TimeoutID } from './timer';\n\nexport type ScrollToAlign = 'auto' | 'smart' | 'center' | 'start' | 'end';\n\ntype itemSize = number | ((index: number) => number);\ntype Layout = 'horizontal' | 'vertical';\ntype Style = {\n  [string]: mixed,\n};\n\ntype RenderComponentProps<T> = {|\n  data: T,\n  index: number,\n  hidden: boolean,\n  style: Style,\n|};\ntype RenderComponent<T> = React$ComponentType<$Shape<RenderComponentProps<T>>>;\n\ntype ScrollDirection = 'forward' | 'backward';\n\ntype onItemsRenderedCallback = ({\n  overscanStartIndex: number,\n  overscanStopIndex: number,\n  visibleStartIndex: number,\n  visibleStopIndex: number,\n}) => void;\n\ntype ItemStyleCache = { [index: number]: Object };\n\ntype containerProps = {|\n  children: React$Node,\n  style: Style,\n|};\n\nconst DEFAULT_OVERSCAN_COUNT = 5;\nconst DEBOUNCE_INTERVAL = 100;\n\nexport type Props<T> = {|\n  children: RenderComponent<T>,\n  className?: string,\n  height: number | string,\n  initialScrollOffset?: number,\n  containerRef?: any,\n  containerElementType?: string | React$AbstractComponent<containerProps, any>,\n  itemCount: number,\n  itemData: T,\n  itemKey?: (index: number, data: T) => any,\n  itemSize: itemSize,\n  overscanCount?: number,\n  layout: Layout,\n  onItemsRendered?: onItemsRenderedCallback,\n  style?: Object,\n  width: number | string,\n|};\n\ntype State = {|\n  instance: any,\n  scrollDirection: ScrollDirection,\n  scrollOffset: number,\n  scrollUpdateWasRequested: boolean,\n  startIndex: number,\n  stopIndex: number,\n|};\n\ntype GetItemOffset = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype GetItemSize = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype GetEstimatedTotalSize = (props: Props<any>, instanceProps: any) => number;\ntype GetOffsetForIndexAndAlignment = (\n  props: Props<any>,\n  index: number,\n  align: ScrollToAlign,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype GetStartIndexForOffset = (\n  props: Props<any>,\n  offset: number,\n  instanceProps: any\n) => number;\ntype GetStopIndexForStartIndex = (\n  props: Props<any>,\n  startIndex: number,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype InitInstanceProps = (props: Props<any>, instance: any) => any;\ntype ValidateProps = (props: Props<any>) => void;\n\nconst defaultItemKey = (index: number, data: any) => index;\n\nexport default function createListComponent({\n  getItemOffset,\n  getEstimatedTotalSize,\n  getItemSize,\n  getOffsetForIndexAndAlignment,\n  getStartIndexForOffset,\n  getStopIndexForStartIndex,\n  initInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange,\n  validateProps,\n}: {|\n  getItemOffset: GetItemOffset,\n  getEstimatedTotalSize: GetEstimatedTotalSize,\n  getItemSize: GetItemSize,\n  getOffsetForIndexAndAlignment: GetOffsetForIndexAndAlignment,\n  getStartIndexForOffset: GetStartIndexForOffset,\n  getStopIndexForStartIndex: GetStopIndexForStartIndex,\n  initInstanceProps: InitInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange: boolean,\n  validateProps: ValidateProps,\n|}) {\n  return class List<T> extends PureComponent<Props<T>, State> {\n    _instanceProps: any = initInstanceProps(this.props, this);\n    _containerRef: ?HTMLDivElement;\n    _clearStyleCacheTimeoutID: TimeoutID | null = null;\n\n    static defaultProps = {\n      itemData: undefined,\n      layout: 'vertical',\n      overscanCount: DEFAULT_OVERSCAN_COUNT,\n    };\n\n    state: State = {\n      instance: this,\n      scrollDirection: 'forward',\n      scrollOffset:\n        typeof this.props.initialScrollOffset === 'number'\n          ? this.props.initialScrollOffset\n          : 0,\n      scrollUpdateWasRequested: false,\n    };\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props: Props<T>) {\n      super(props);\n\n      const { initialScrollOffset } = props;\n\n      const scrollOffset =\n        typeof initialScrollOffset === 'number' ? initialScrollOffset : 0;\n\n      this.state = {\n        instance: this,\n        scrollDirection: 'forward',\n        scrollOffset,\n        scrollUpdateWasRequested: typeof initialScrollOffset === 'number',\n      };\n    }\n\n    static getDerivedStateFromProps(\n      nextProps: Props<T>,\n      prevState: State\n    ): $Shape<State> | null {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    }\n\n    scrollTo(scrollOffset: number): void {\n      scrollOffset = Math.max(0, scrollOffset);\n\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollOffset) {\n          return null;\n        }\n        return {\n          scrollDirection:\n            prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset,\n          scrollUpdateWasRequested: true,\n        };\n      }, this._resetIsScrollingDebounced);\n    }\n\n    scrollToItem(index: number, align: ScrollToAlign = 'auto'): void {\n      const { itemCount } = this.props;\n      const { scrollOffset } = this.state;\n\n      index = Math.max(0, Math.min(index, itemCount - 1));\n\n      this.scrollTo(\n        getOffsetForIndexAndAlignment(\n          this.props,\n          index,\n          align,\n          scrollOffset,\n          this._instanceProps\n        )\n      );\n    }\n\n    componentDidMount() {\n      this._commitHook();\n    }\n\n    componentDidUpdate() {\n      this._commitHook();\n    }\n\n    componentWillUnmount() {\n      if (this._clearStyleCacheTimeoutID !== null) {\n        cancelTimeout(this._clearStyleCacheTimeoutID);\n      }\n    }\n\n    render() {\n      const {\n        children,\n        className,\n        containerElementType,\n        itemCount,\n        itemData,\n        itemKey = defaultItemKey,\n        style,\n      } = this.props;\n\n      const [\n        startIndex,\n        stopIndex,\n        visibleStartIndex,\n        visibleStopIndex,\n      ] = this._getRangeToRender();\n\n      const items = [];\n\n      if (itemCount > 0) {\n        for (let index = startIndex; index <= stopIndex; index++) {\n          const hidden = index < visibleStartIndex || index > visibleStopIndex;\n          items.push(\n            createElement(children, {\n              data: itemData,\n              hidden,\n              index,\n              key: itemKey(index, itemData),\n              style: this._getItemStyle(index),\n            })\n          );\n        }\n      }\n\n      return createElement(containerElementType || 'div', {\n        className,\n        children: items,\n        ref: this._containerRefSetter,\n        style: {\n          position: 'relative',\n          willChange: 'transform',\n          contain: 'layout',\n          pointerEvents: 'none',\n          ...style,\n        },\n      });\n    }\n\n    _commitHook() {\n      const { layout, itemCount } = this.props;\n      const { scrollOffset, scrollUpdateWasRequested } = this.state;\n\n      if (scrollUpdateWasRequested && this._containerRef != null) {\n        const containerRef = ((this._containerRef: any): HTMLElement);\n\n        if (layout === 'horizontal') {\n          containerRef.style.transform = `translate3d(-${scrollOffset}px, 0px, 0px)`;\n        } else {\n          containerRef.style.transform = `translate3d(0px, -${scrollOffset}px, 0px)`;\n        }\n      }\n\n      if (itemCount > 0) {\n        this._callPropsCallbacks();\n      }\n\n      // Clear style cache after scrolling has stopped.\n      // This enables us to cache during the most perfrormance sensitive times (when scrolling)\n      // while also preventing the cache from growing unbounded.\n      this._clearStyleCacheDebounced();\n    }\n\n    _callOnItemsRendered: (\n      overscanStartIndex: number,\n      overscanStopIndex: number,\n      visibleStartIndex: number,\n      visibleStopIndex: number\n    ) => void;\n    _callOnItemsRendered = memoizeOne(\n      (\n        overscanStartIndex: number,\n        overscanStopIndex: number,\n        visibleStartIndex: number,\n        visibleStopIndex: number\n      ) =>\n        ((this.props.onItemsRendered: any): onItemsRenderedCallback)({\n          overscanStartIndex,\n          overscanStopIndex,\n          visibleStartIndex,\n          visibleStopIndex,\n        })\n    );\n\n    _callPropsCallbacks() {\n      if (typeof this.props.onItemsRendered === 'function') {\n        const { itemCount } = this.props;\n        if (itemCount > 0) {\n          const [\n            overscanStartIndex,\n            overscanStopIndex,\n            visibleStartIndex,\n            visibleStopIndex,\n          ] = this._getRangeToRender();\n          this._callOnItemsRendered(\n            overscanStartIndex,\n            overscanStopIndex,\n            visibleStartIndex,\n            visibleStopIndex\n          );\n        }\n      }\n    }\n\n    // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    _getItemStyle: (index: number) => Object;\n    _getItemStyle = (index: number): Object => {\n      const { itemSize, layout } = this.props;\n\n      const itemStyleCache = this._getItemStyleCache(\n        shouldResetStyleCacheOnItemSizeChange && itemSize,\n        shouldResetStyleCacheOnItemSizeChange && layout\n      );\n\n      let style;\n      if (itemStyleCache.hasOwnProperty(index)) {\n        style = itemStyleCache[index];\n      } else {\n        const offset = getItemOffset(this.props, index, this._instanceProps);\n        const size = getItemSize(this.props, index, this._instanceProps);\n        const isHorizontal = layout === 'horizontal';\n\n        const transform = isHorizontal\n          ? `translate3d(${offset}px, 0px, 0px)`\n          : `translate3d(0px, ${offset}px, 0px)`;\n\n        itemStyleCache[index] = style = {\n          transform,\n          height: !isHorizontal ? size : 0,\n          width: isHorizontal ? size : 0,\n          willChange: 'transform',\n          transition: 'none',\n        };\n      }\n\n      return style;\n    };\n\n    _getItemStyleCache: (_: any, __: any, ___: any) => ItemStyleCache;\n    _getItemStyleCache = memoizeOne((_: any, __: any, ___: any) => ({}));\n\n    _getRangeToRender(): [number, number, number, number] {\n      const { itemCount, overscanCount } = this.props;\n      const { scrollOffset } = this.state;\n\n      if (itemCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getStartIndexForOffset(\n        this.props,\n        scrollOffset,\n        this._instanceProps\n      );\n      const stopIndex = getStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollOffset,\n        this._instanceProps\n      );\n\n      return [\n        Math.max(0, startIndex - overscanCount),\n        Math.max(0, Math.min(itemCount - 1, stopIndex + overscanCount)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _containerRefSetter = (ref: any): void => {\n      const { containerRef } = this.props;\n\n      this._containerRef = ((ref: any): HTMLDivElement);\n\n      if (typeof containerRef === 'function') {\n        containerRef(ref);\n      } else if (\n        containerRef != null &&\n        typeof containerRef === 'object' &&\n        containerRef.hasOwnProperty('current')\n      ) {\n        containerRef.current = ref;\n      }\n    };\n\n    _clearStyleCacheDebounced() {\n      if (this._clearStyleCacheTimeoutID !== null) {\n        cancelTimeout(this._clearStyleCacheTimeoutID);\n      }\n\n      this._clearStyleCacheTimeoutID = requestTimeout(\n        this._clearStyleCache,\n        DEBOUNCE_INTERVAL\n      );\n    }\n\n    _clearStyleCache = () => {\n      this._clearStyleCacheTimeoutID = null;\n\n      // Clear style cache after state update has been committed.\n      this._getItemStyleCache(-1, null);\n    };\n  };\n}\n\n// NOTE: I considered further wrapping individual items with a pure ListItem component.\n// This would avoid ever calling the render function for the same index more than once,\n// But it would also add the overhead of a lot of components/fibers.\n// I assume people already do this (render function returning a class component),\n// So my doing it would just unnecessarily double the wrappers.\n\nconst validateSharedProps = (\n  { children, height, layout, width }: Props<any>,\n  { instance }: State\n): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    const isHorizontal = layout === 'horizontal';\n\n    switch (layout) {\n      case 'horizontal':\n      case 'vertical':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"layout\" prop has been specified. ' +\n            'Value should be either \"horizontal\" or \"vertical\". ' +\n            `\"${layout}\" was specified.`\n        );\n    }\n\n    if (children == null) {\n      throw Error(\n        'An invalid \"children\" prop has been specified. ' +\n          'Value should be a React component. ' +\n          `\"${children === null ? 'null' : typeof children}\" was specified.`\n      );\n    }\n\n    if (isHorizontal && typeof width !== 'number') {\n      throw Error(\n        'An invalid \"width\" prop has been specified. ' +\n          'Horizontal lists must specify a number for width. ' +\n          `\"${width === null ? 'null' : typeof width}\" was specified.`\n      );\n    } else if (!isHorizontal && typeof height !== 'number') {\n      throw Error(\n        'An invalid \"height\" prop has been specified. ' +\n          'Vertical lists must specify a number for height. ' +\n          `\"${height === null ? 'null' : typeof height}\" was specified.`\n      );\n    }\n  }\n};\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","// @flow\n\nimport createListComponent from './createListComponent';\n\nimport type { Props, ScrollToAlign } from './createListComponent';\n\nconst DEFAULT_ESTIMATED_ITEM_SIZE = 50;\n\ntype VariableSizeProps = {|\n  estimatedItemSize: number,\n  ...Props<any>,\n|};\n\ntype itemSizeGetter = (index: number) => number;\n\ntype ItemMetadata = {|\n  offset: number,\n  size: number,\n|};\ntype InstanceProps = {|\n  itemMetadataMap: { [index: number]: ItemMetadata },\n  estimatedItemSize: number,\n  lastMeasuredIndex: number,\n|};\n\nconst getItemMetadata = (\n  props: Props<any>,\n  index: number,\n  instanceProps: InstanceProps\n): ItemMetadata => {\n  const { itemSize } = ((props: any): VariableSizeProps);\n  const { itemMetadataMap, lastMeasuredIndex } = instanceProps;\n\n  if (index > lastMeasuredIndex) {\n    let offset = 0;\n    if (lastMeasuredIndex >= 0) {\n      const itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (let i = lastMeasuredIndex + 1; i <= index; i++) {\n      let size = ((itemSize: any): itemSizeGetter)(i);\n\n      itemMetadataMap[i] = {\n        offset,\n        size,\n      };\n\n      offset += size;\n    }\n\n    instanceProps.lastMeasuredIndex = index;\n  }\n\n  return itemMetadataMap[index];\n};\n\nconst findNearestItem = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  offset: number\n) => {\n  const { itemMetadataMap, lastMeasuredIndex } = instanceProps;\n\n  const lastMeasuredItemOffset =\n    lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch(\n      props,\n      instanceProps,\n      lastMeasuredIndex,\n      0,\n      offset\n    );\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch(\n      props,\n      instanceProps,\n      Math.max(0, lastMeasuredIndex),\n      offset\n    );\n  }\n};\n\nconst findNearestItemBinarySearch = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  high: number,\n  low: number,\n  offset: number\n): number => {\n  while (low <= high) {\n    const middle = low + Math.floor((high - low) / 2);\n    const currentOffset = getItemMetadata(props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nconst findNearestItemExponentialSearch = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  index: number,\n  offset: number\n): number => {\n  const { itemCount } = props;\n  let interval = 1;\n\n  while (\n    index < itemCount &&\n    getItemMetadata(props, index, instanceProps).offset < offset\n  ) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch(\n    props,\n    instanceProps,\n    Math.min(index, itemCount - 1),\n    Math.floor(index / 2),\n    offset\n  );\n};\n\nconst getEstimatedTotalSize = (\n  { itemCount }: Props<any>,\n  { itemMetadataMap, estimatedItemSize, lastMeasuredIndex }: InstanceProps\n) => {\n  let totalSizeOfMeasuredItems = 0;\n\n  // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n  if (lastMeasuredIndex >= itemCount) {\n    lastMeasuredIndex = itemCount - 1;\n  }\n\n  if (lastMeasuredIndex >= 0) {\n    const itemMetadata = itemMetadataMap[lastMeasuredIndex];\n    totalSizeOfMeasuredItems = itemMetadata.offset + itemMetadata.size;\n  }\n\n  const numUnmeasuredItems = itemCount - lastMeasuredIndex - 1;\n  const totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedItemSize;\n\n  return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;\n};\n\nconst VariableSizeList = createListComponent({\n  getItemOffset: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => getItemMetadata(props, index, instanceProps).offset,\n\n  getItemSize: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => instanceProps.itemMetadataMap[index].size,\n\n  getEstimatedTotalSize,\n\n  getOffsetForIndexAndAlignment: (\n    props: Props<any>,\n    index: number,\n    align: ScrollToAlign,\n    scrollOffset: number,\n    instanceProps: InstanceProps\n  ): number => {\n    const { height, layout, width } = props;\n\n    const isHorizontal = layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const itemMetadata = getItemMetadata(props, index, instanceProps);\n\n    // Get estimated total size after ItemMetadata is computed,\n    // To ensure it reflects actual measurements instead of just estimates.\n    const estimatedTotalSize = getEstimatedTotalSize(props, instanceProps);\n\n    const maxOffset = Math.max(\n      0,\n      Math.min(estimatedTotalSize - size, itemMetadata.offset)\n    );\n    const minOffset = Math.max(\n      0,\n      itemMetadata.offset - size + itemMetadata.size\n    );\n\n    if (align === 'smart') {\n      if (\n        scrollOffset >= minOffset - size &&\n        scrollOffset <= maxOffset + size\n      ) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center':\n        return Math.round(minOffset + (maxOffset - minOffset) / 2);\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n\n  getStartIndexForOffset: (\n    props: Props<any>,\n    offset: number,\n    instanceProps: InstanceProps\n  ): number => findNearestItem(props, instanceProps, offset),\n\n  getStopIndexForStartIndex: (\n    props: Props<any>,\n    startIndex: number,\n    scrollOffset: number,\n    instanceProps: InstanceProps\n  ): number => {\n    const { height, itemCount, layout, width } = props;\n\n    const isHorizontal = layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const itemMetadata = getItemMetadata(props, startIndex, instanceProps);\n    const maxOffset = scrollOffset + size;\n\n    let offset = itemMetadata.offset + itemMetadata.size;\n    let stopIndex = startIndex;\n\n    while (stopIndex < itemCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata(props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n\n  initInstanceProps(props: Props<any>, instance: any): InstanceProps {\n    const { estimatedItemSize } = ((props: any): VariableSizeProps);\n\n    const instanceProps = {\n      itemMetadataMap: {},\n      estimatedItemSize: estimatedItemSize || DEFAULT_ESTIMATED_ITEM_SIZE,\n      lastMeasuredIndex: -1,\n    };\n\n    instance.resetAfterIndex = (\n      index: number,\n      shouldForceUpdate?: boolean = true\n    ) => {\n      instanceProps.lastMeasuredIndex = Math.min(\n        instanceProps.lastMeasuredIndex,\n        index - 1\n      );\n\n      // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n\n  shouldResetStyleCacheOnItemSizeChange: false,\n\n  validateProps: ({ itemSize }: Props<any>): void => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'function') {\n        throw Error(\n          'An invalid \"itemSize\" prop has been specified. ' +\n            'Value should be a function. ' +\n            `\"${itemSize === null ? 'null' : typeof itemSize}\" was specified.`\n        );\n      }\n    }\n  },\n});\n\nexport default VariableSizeList;\n","// @flow\n\nimport createListComponent from './createListComponent';\n\nimport type { Props, ScrollToAlign } from './createListComponent';\n\nconst FixedSizeList = createListComponent({\n  getItemOffset: ({ itemSize }: Props<any>, index: number): number =>\n    index * ((itemSize: any): number),\n\n  getItemSize: ({ itemSize }: Props<any>, index: number): number =>\n    ((itemSize: any): number),\n\n  getEstimatedTotalSize: ({ itemCount, itemSize }: Props<any>) =>\n    ((itemSize: any): number) * itemCount,\n\n  getOffsetForIndexAndAlignment: (\n    { direction, height, itemCount, itemSize, layout, width }: Props<any>,\n    index: number,\n    align: ScrollToAlign,\n    scrollOffset: number\n  ): number => {\n    const isHorizontal = layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const lastItemOffset = Math.max(\n      0,\n      itemCount * ((itemSize: any): number) - size\n    );\n    const maxOffset = Math.min(\n      lastItemOffset,\n      index * ((itemSize: any): number)\n    );\n    const minOffset = Math.max(\n      0,\n      index * ((itemSize: any): number) - size + ((itemSize: any): number)\n    );\n\n    if (align === 'smart') {\n      if (\n        scrollOffset >= minOffset - size &&\n        scrollOffset <= maxOffset + size\n      ) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center': {\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        const middleOffset = Math.round(\n          minOffset + (maxOffset - minOffset) / 2\n        );\n        if (middleOffset < Math.ceil(size / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastItemOffset + Math.floor(size / 2)) {\n          return lastItemOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n      }\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n\n  getStartIndexForOffset: (\n    { itemCount, itemSize }: Props<any>,\n    offset: number\n  ): number =>\n    Math.max(\n      0,\n      Math.min(itemCount - 1, Math.floor(offset / ((itemSize: any): number)))\n    ),\n\n  getStopIndexForStartIndex: (\n    { direction, height, itemCount, itemSize, layout, width }: Props<any>,\n    startIndex: number,\n    scrollOffset: number\n  ): number => {\n    const isHorizontal = layout === 'horizontal';\n    const offset = startIndex * ((itemSize: any): number);\n    const size = (((isHorizontal ? width : height): any): number);\n    const numVisibleItems = Math.ceil(\n      (size + scrollOffset - offset) / ((itemSize: any): number)\n    );\n    return Math.max(\n      0,\n      Math.min(\n        itemCount - 1,\n        startIndex + numVisibleItems - 1 // -1 is because stop index is inclusive\n      )\n    );\n  },\n\n  initInstanceProps(props: Props<any>): any {\n    // Noop\n  },\n\n  shouldResetStyleCacheOnItemSizeChange: true,\n\n  validateProps: ({ itemSize }: Props<any>): void => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'number') {\n        throw Error(\n          'An invalid \"itemSize\" prop has been specified. ' +\n            'Value should be a number. ' +\n            `\"${itemSize === null ? 'null' : typeof itemSize}\" was specified.`\n        );\n      }\n    }\n  },\n});\n\nexport default FixedSizeList;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// @flow\n\n// Pulled from react-compat\n// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349\nexport default function shallowDiffers(prev: Object, next: Object): boolean {\n  for (let attribute in prev) {\n    if (!(attribute in next)) {\n      return true;\n    }\n  }\n  for (let attribute in next) {\n    if (prev[attribute] !== next[attribute]) {\n      return true;\n    }\n  }\n  return false;\n}\n","// @flow\n\nimport shallowDiffers from './shallowDiffers';\n\n// Custom comparison function for React.memo().\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-api.html#reactmemo\nexport default function areEqual(\n  prevProps: Object,\n  nextProps: Object\n): boolean {\n  const { style: prevStyle, ...prevRest } = prevProps;\n  const { style: nextStyle, ...nextRest } = nextProps;\n\n  return (\n    !shallowDiffers(prevStyle, nextStyle) && !shallowDiffers(prevRest, nextRest)\n  );\n}\n","// @flow\n\nimport areEqual from './areEqual';\nimport shallowDiffers from './shallowDiffers';\n\n// Custom shouldComponentUpdate for class components.\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-component.html#shouldcomponentupdate\nexport default function shouldComponentUpdate(\n  nextProps: Object,\n  nextState: Object\n): boolean {\n  return (\n    !areEqual(this.props, nextProps) || shallowDiffers(this.state, nextState)\n  );\n}\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","o","p","setPrototypeOf","__proto__","safeIsNaN","Number","isNaN","value","areInputsEqual","newInputs","lastInputs","first","second","memoizeOne","resultFn","isEqual","lastThis","lastResult","lastArgs","calledOnce","newArgs","_i","now","performance","Date","cancelTimeout","timeoutID","cancelAnimationFrame","id","defaultItemKey","index","data","createListComponent","getItemOffset","getItemSize","getEstimatedTotalSize","getOffsetForIndexAndAlignment","getStartIndexForOffset","getStopIndexForStartIndex","initInstanceProps","shouldResetStyleCacheOnItemSizeChange","validateProps","subClass","superClass","props","_instanceProps","_this","_containerRef","_clearStyleCacheTimeoutID","state","instance","scrollDirection","scrollOffset","initialScrollOffset","scrollUpdateWasRequested","_callOnItemsRendered","overscanStartIndex","overscanStopIndex","visibleStartIndex","visibleStopIndex","onItemsRendered","_getItemStyle","style","itemSize","layout","itemStyleCache","_getItemStyleCache","offset","size","isHorizontal","transform","height","width","willChange","transition","_","__","___","_containerRefSetter","ref","containerRef","current","_clearStyleCache","create","constructor","getDerivedStateFromProps","nextProps","prevState","validateSharedProps","scrollTo","Math","max","setState","_resetIsScrollingDebounced","scrollToItem","align","itemCount","min","componentDidMount","_commitHook","componentDidUpdate","componentWillUnmount","render","children","className","containerElementType","itemData","itemKey","_getRangeToRender","startIndex","stopIndex","items","hidden","push","createElement","position","contain","pointerEvents","_callPropsCallbacks","_clearStyleCacheDebounced","overscanCount","callback","delay","start","requestAnimationFrame","tick","PureComponent","defaultProps","undefined","Error","getItemMetadata","instanceProps","itemMetadataMap","lastMeasuredIndex","itemMetadata","findNearestItemBinarySearch","high","low","middle","floor","currentOffset","findNearestItemExponentialSearch","interval","estimatedItemSize","totalSizeOfMeasuredItems","VariableSizeList","estimatedTotalSize","maxOffset","minOffset","round","findNearestItem","resetAfterIndex","shouldForceUpdate","forceUpdate","FixedSizeList","direction","lastItemOffset","middleOffset","ceil","numVisibleItems","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","shallowDiffers","prev","next","attribute","areEqual","prevProps","prevStyle","prevRest","nextStyle","nextRest","nextState"],"mappings":"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"}