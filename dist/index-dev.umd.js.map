{"version":3,"file":"index-dev.umd.js","sources":["../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/memoize-one/dist/memoize-one.esm.js","../src/timer.js","../src/createListComponent.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../src/VariableSizeList.js","../src/FixedSizeList.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../src/shallowDiffers.js","../src/areEqual.js","../src/shouldComponentUpdate.js"],"sourcesContent":["export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var lastThis;\n    var lastArgs = [];\n    var lastResult;\n    var calledOnce = false;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n            return lastResult;\n        }\n        lastResult = resultFn.apply(this, newArgs);\n        calledOnce = true;\n        lastThis = this;\n        lastArgs = newArgs;\n        return lastResult;\n    }\n    return memoized;\n}\n\nexport default memoizeOne;\n","// @flow\n\n// Animation frame based implementation of setTimeout.\n// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js\n\nconst hasNativePerformanceNow =\n  typeof performance === 'object' && typeof performance.now === 'function';\n\nconst now = hasNativePerformanceNow\n  ? () => performance.now()\n  : () => Date.now();\n\nexport type TimeoutID = {|\n  id: AnimationFrameID,\n|};\n\nexport function cancelTimeout(timeoutID: TimeoutID) {\n  cancelAnimationFrame(timeoutID.id);\n}\n\nexport function requestTimeout(callback: Function, delay: number): TimeoutID {\n  const start = now();\n\n  function tick() {\n    if (now() - start >= delay) {\n      callback.call(null);\n    } else {\n      timeoutID.id = requestAnimationFrame(tick);\n    }\n  }\n\n  const timeoutID: TimeoutID = {\n    id: requestAnimationFrame(tick),\n  };\n\n  return timeoutID;\n}\n","// @flow\n\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport { cancelTimeout, requestTimeout } from './timer';\n\nimport type { TimeoutID } from './timer';\n\nexport type ScrollToAlign = 'auto' | 'smart' | 'center' | 'start' | 'end';\n\ntype itemSize = number | ((index: number) => number);\ntype Layout = 'horizontal' | 'vertical';\ntype Style = {\n  [string]: mixed,\n};\n\ntype RenderComponentProps<T> = {|\n  data: T,\n  index: number,\n  hidden: boolean,\n  style: Object,\n|};\ntype RenderComponent<T> = React$ComponentType<$Shape<RenderComponentProps<T>>>;\n\ntype ScrollDirection = 'forward' | 'backward';\n\ntype onItemsRenderedCallback = ({\n  overscanStartIndex: number,\n  overscanStopIndex: number,\n  visibleStartIndex: number,\n  visibleStopIndex: number,\n}) => void;\n\ntype ItemStyleCache = { [index: number]: Object };\n\ntype OuterProps = {|\n  children: React$Node,\n  className: string | void,\n  style: Style,\n|};\n\ntype InnerProps = {|\n  children: React$Node,\n  style: Style,\n|};\n\nexport type Props<T> = {|\n  children: RenderComponent<T>,\n  className?: string,\n  height: number | string,\n  initialScrollOffset?: number,\n  innerRef?: any,\n  innerElementType?: string | React$AbstractComponent<InnerProps, any>,\n  itemCount: number,\n  itemData: T,\n  itemKey?: (index: number, data: T) => any,\n  itemSize: itemSize,\n  layout: Layout,\n  onItemsRendered?: onItemsRenderedCallback,\n  outerRef?: any,\n  outerElementType?: string | React$AbstractComponent<OuterProps, any>,\n  overscanCount: number,\n  style?: Style,\n  width: number | string,\n|};\n\ntype State = {|\n  instance: any,\n  scrollDirection: ScrollDirection,\n  scrollOffset: number,\n  scrollUpdateWasRequested: boolean,\n|};\n\ntype GetItemOffset = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype GetItemSize = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype GetEstimatedTotalSize = (props: Props<any>, instanceProps: any) => number;\ntype GetOffsetForIndexAndAlignment = (\n  props: Props<any>,\n  index: number,\n  align: ScrollToAlign,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype GetStartIndexForOffset = (\n  props: Props<any>,\n  offset: number,\n  instanceProps: any\n) => number;\ntype GetStopIndexForStartIndex = (\n  props: Props<any>,\n  startIndex: number,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype InitInstanceProps = (props: Props<any>, instance: any) => any;\ntype ValidateProps = (props: Props<any>) => void;\n\nconst DEBOUNCE_INTERVAL = 150;\n\nconst defaultItemKey = (index: number, data: any) => index;\n\nexport default function createListComponent({\n  getItemOffset,\n  getEstimatedTotalSize,\n  getItemSize,\n  getOffsetForIndexAndAlignment,\n  getStartIndexForOffset,\n  getStopIndexForStartIndex,\n  initInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange,\n  validateProps,\n}: {|\n  getItemOffset: GetItemOffset,\n  getEstimatedTotalSize: GetEstimatedTotalSize,\n  getItemSize: GetItemSize,\n  getOffsetForIndexAndAlignment: GetOffsetForIndexAndAlignment,\n  getStartIndexForOffset: GetStartIndexForOffset,\n  getStopIndexForStartIndex: GetStopIndexForStartIndex,\n  initInstanceProps: InitInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange: boolean,\n  validateProps: ValidateProps,\n|}) {\n  return class List<T> extends PureComponent<Props<T>, State> {\n    _instanceProps: any = initInstanceProps(this.props, this);\n    _outerRef: ?HTMLDivElement;\n    _innerRef: ?HTMLDivElement;\n    _clearStyleCacheTimeoutID: TimeoutID | null = null;\n\n    static defaultProps = {\n      itemData: undefined,\n      layout: 'vertical',\n      overscanCount: 2,\n    };\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props: Props<T>) {\n      super(props);\n\n      const { initialScrollOffset } = props;\n\n      const scrollOffset =\n        typeof initialScrollOffset === 'number' ? initialScrollOffset : 0;\n\n      this.state = {\n        instance: this,\n        scrollDirection: 'forward',\n        scrollOffset,\n        scrollUpdateWasRequested: typeof initialScrollOffset === 'number',\n      };\n    }\n\n    static getDerivedStateFromProps(\n      nextProps: Props<T>,\n      prevState: State\n    ): $Shape<State> | null {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    }\n\n    scrollTo(scrollOffset: number): void {\n      scrollOffset = Math.max(0, scrollOffset);\n\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollOffset) {\n          return null;\n        }\n        return {\n          scrollDirection:\n            prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: true,\n        };\n      });\n    }\n\n    scrollToItem(index: number, align: ScrollToAlign = 'auto'): void {\n      const { itemCount } = this.props;\n      const { scrollOffset } = this.state;\n\n      index = Math.max(0, Math.min(index, itemCount - 1));\n\n      this.scrollTo(\n        getOffsetForIndexAndAlignment(\n          this.props,\n          index,\n          align,\n          scrollOffset,\n          this._instanceProps\n        )\n      );\n    }\n\n    componentDidMount() {\n      this._commitHook();\n    }\n\n    componentDidUpdate() {\n      this._commitHook();\n    }\n\n    componentWillUnmount() {\n      if (this._clearStyleCacheTimeoutID !== null) {\n        cancelTimeout(this._clearStyleCacheTimeoutID);\n      }\n    }\n\n    render() {\n      const {\n        children,\n        className,\n        innerElementType,\n        itemCount,\n        itemData,\n        itemKey = defaultItemKey,\n        outerElementType,\n        style,\n      } = this.props;\n\n      const [\n        startIndex,\n        stopIndex,\n        visibleStartIndex,\n        visibleStopIndex,\n      ] = this._getRangeToRender();\n\n      const items = [];\n      if (itemCount > 0) {\n        for (let index = startIndex; index <= stopIndex; index++) {\n          const hidden = index < visibleStartIndex || index > visibleStopIndex;\n          items.push(\n            createElement(children, {\n              data: itemData,\n              key: itemKey(index, itemData),\n              index,\n              hidden,\n              style: this._getItemStyle(index),\n            })\n          );\n        }\n      }\n\n      return createElement(\n        outerElementType || 'div',\n        {\n          className,\n          ref: this._outerRefSetter,\n          style: {\n            position: 'relative',\n            WebkitOverflowScrolling: 'touch',\n            willChange: 'transform',\n            contain: 'layout',\n            ...style,\n          },\n        },\n        createElement(innerElementType || 'div', {\n          children: items,\n          ref: this._innerRefSetter,\n          style: {\n            position: 'relative',\n            willChange: 'transform',\n            contain: 'layout',\n            pointerEvents: 'none',\n          },\n        })\n      );\n    }\n\n    _commitHook() {\n      const { layout, itemCount } = this.props;\n      const { scrollOffset, scrollUpdateWasRequested } = this.state;\n\n      if (scrollUpdateWasRequested && this._innerRef != null) {\n        const innerRef = ((this._innerRef: any): HTMLElement);\n\n        if (layout === 'horizontal') {\n          innerRef.style.transform = `translate3d(-${scrollOffset}px, 0px, 0px)`;\n        } else {\n          innerRef.style.transform = `translate3d(0px, -${scrollOffset}px, 0px)`;\n        }\n      }\n\n      if (itemCount > 0) {\n        this._callPropsCallbacks();\n      }\n\n      // Clear style cache after scrolling has stopped.\n      // This enables us to cache during the most perfrormance sensitive times (when scrolling)\n      // while also preventing the cache from growing unbounded.\n      this._clearStyleCacheDebounced();\n    }\n\n    _callOnItemsRendered: (\n      overscanStartIndex: number,\n      overscanStopIndex: number,\n      visibleStartIndex: number,\n      visibleStopIndex: number\n    ) => void;\n    _callOnItemsRendered = memoizeOne(\n      (\n        overscanStartIndex: number,\n        overscanStopIndex: number,\n        visibleStartIndex: number,\n        visibleStopIndex: number\n      ) =>\n        ((this.props.onItemsRendered: any): onItemsRenderedCallback)({\n          overscanStartIndex,\n          overscanStopIndex,\n          visibleStartIndex,\n          visibleStopIndex,\n        })\n    );\n\n    _callPropsCallbacks() {\n      if (typeof this.props.onItemsRendered === 'function') {\n        const { itemCount } = this.props;\n        if (itemCount > 0) {\n          const [\n            overscanStartIndex,\n            overscanStopIndex,\n            visibleStartIndex,\n            visibleStopIndex,\n          ] = this._getRangeToRender();\n          this._callOnItemsRendered(\n            overscanStartIndex,\n            overscanStopIndex,\n            visibleStartIndex,\n            visibleStopIndex\n          );\n        }\n      }\n    }\n\n    // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    _getItemStyle: (index: number) => Object;\n    _getItemStyle = (index: number): Object => {\n      const { itemSize, layout } = this.props;\n\n      const itemStyleCache = this._getItemStyleCache(\n        shouldResetStyleCacheOnItemSizeChange && itemSize,\n        shouldResetStyleCacheOnItemSizeChange && layout\n      );\n\n      let style;\n      if (itemStyleCache.hasOwnProperty(index)) {\n        style = itemStyleCache[index];\n      } else {\n        const offset = getItemOffset(this.props, index, this._instanceProps);\n        const size = getItemSize(this.props, index, this._instanceProps);\n        const isHorizontal = layout === 'horizontal';\n\n        const transform = isHorizontal\n          ? `translate3d(${offset}px, 0px, 0px)`\n          : `translate3d(0px, ${offset}px, 0px)`;\n\n        itemStyleCache[index] = style = {\n          transform,\n          height: !isHorizontal ? size : 0,\n          width: isHorizontal ? size : 0,\n          willChange: 'transform',\n          transition: 'none',\n        };\n      }\n\n      return style;\n    };\n\n    _getItemStyleCache: (_: any, __: any, ___: any) => ItemStyleCache;\n    _getItemStyleCache = memoizeOne((_: any, __: any, ___: any) => ({}));\n\n    _getRangeToRender(): [number, number, number, number] {\n      const { itemCount, overscanCount } = this.props;\n      const { scrollDirection, scrollOffset } = this.state;\n\n      if (itemCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getStartIndexForOffset(\n        this.props,\n        scrollOffset,\n        this._instanceProps\n      );\n      const stopIndex = getStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollOffset,\n        this._instanceProps\n      );\n\n      const overscanBackward =\n        scrollDirection === 'backward' ? Math.max(1, overscanCount) : 1;\n      const overscanForward =\n        scrollDirection === 'forward' ? Math.max(1, overscanCount) : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(itemCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _outerRefSetter = (ref: any): void => {\n      const { outerRef } = this.props;\n\n      this._outerRef = ((ref: any): HTMLDivElement);\n\n      if (typeof outerRef === 'function') {\n        outerRef(ref);\n      } else if (\n        outerRef != null &&\n        typeof outerRef === 'object' &&\n        outerRef.hasOwnProperty('current')\n      ) {\n        outerRef.current = ref;\n      }\n    };\n\n    _innerRefSetter = (ref: any): void => {\n      const { innerRef } = this.props;\n\n      this._innerRef = ((ref: any): HTMLDivElement);\n\n      if (typeof innerRef === 'function') {\n        innerRef(ref);\n      } else if (\n        innerRef != null &&\n        typeof innerRef === 'object' &&\n        innerRef.hasOwnProperty('current')\n      ) {\n        innerRef.current = ref;\n      }\n    };\n\n    _clearStyleCacheDebounced() {\n      if (this._clearStyleCacheTimeoutID !== null) {\n        cancelTimeout(this._clearStyleCacheTimeoutID);\n      }\n\n      this._clearStyleCacheTimeoutID = requestTimeout(\n        this._clearStyleCache,\n        DEBOUNCE_INTERVAL\n      );\n    }\n\n    _clearStyleCache = () => {\n      this._clearStyleCacheTimeoutID = null;\n\n      // Clear style cache after state update has been committed.\n      this._getItemStyleCache(-1, null);\n    };\n  };\n}\n\n// NOTE: I considered further wrapping individual items with a pure ListItem component.\n// This would avoid ever calling the render function for the same index more than once,\n// But it would also add the overhead of a lot of components/fibers.\n// I assume people already do this (render function returning a class component),\n// So my doing it would just unnecessarily double the wrappers.\n\nconst validateSharedProps = (\n  { children, height, layout, innerTagName, outerTagName, width }: Props<any>,\n  { instance }: State\n): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    const isHorizontal = layout === 'horizontal';\n\n    switch (layout) {\n      case 'horizontal':\n      case 'vertical':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"layout\" prop has been specified. ' +\n            'Value should be either \"horizontal\" or \"vertical\". ' +\n            `\"${layout}\" was specified.`\n        );\n    }\n\n    if (children == null) {\n      throw Error(\n        'An invalid \"children\" prop has been specified. ' +\n          'Value should be a React component. ' +\n          `\"${children === null ? 'null' : typeof children}\" was specified.`\n      );\n    }\n\n    if (isHorizontal && typeof width !== 'number') {\n      throw Error(\n        'An invalid \"width\" prop has been specified. ' +\n          'Horizontal lists must specify a number for width. ' +\n          `\"${width === null ? 'null' : typeof width}\" was specified.`\n      );\n    } else if (!isHorizontal && typeof height !== 'number') {\n      throw Error(\n        'An invalid \"height\" prop has been specified. ' +\n          'Vertical lists must specify a number for height. ' +\n          `\"${height === null ? 'null' : typeof height}\" was specified.`\n      );\n    }\n  }\n};\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","// @flow\n\nimport createListComponent from './createListComponent';\n\nimport type { Props, ScrollToAlign } from './createListComponent';\n\nconst DEFAULT_ESTIMATED_ITEM_SIZE = 50;\n\ntype VariableSizeProps = {|\n  estimatedItemSize: number,\n  ...Props<any>,\n|};\n\ntype itemSizeGetter = (index: number) => number;\n\ntype ItemMetadata = {|\n  offset: number,\n  size: number,\n|};\ntype InstanceProps = {|\n  itemMetadataMap: { [index: number]: ItemMetadata },\n  estimatedItemSize: number,\n  lastMeasuredIndex: number,\n|};\n\nconst getItemMetadata = (\n  props: Props<any>,\n  index: number,\n  instanceProps: InstanceProps\n): ItemMetadata => {\n  const { itemSize } = ((props: any): VariableSizeProps);\n  const { itemMetadataMap, lastMeasuredIndex } = instanceProps;\n\n  if (index > lastMeasuredIndex) {\n    let offset = 0;\n    if (lastMeasuredIndex >= 0) {\n      const itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (let i = lastMeasuredIndex + 1; i <= index; i++) {\n      let size = ((itemSize: any): itemSizeGetter)(i);\n\n      itemMetadataMap[i] = {\n        offset,\n        size,\n      };\n\n      offset += size;\n    }\n\n    instanceProps.lastMeasuredIndex = index;\n  }\n\n  return itemMetadataMap[index];\n};\n\nconst findNearestItem = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  offset: number\n) => {\n  const { itemMetadataMap, lastMeasuredIndex } = instanceProps;\n\n  const lastMeasuredItemOffset =\n    lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch(\n      props,\n      instanceProps,\n      lastMeasuredIndex,\n      0,\n      offset\n    );\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch(\n      props,\n      instanceProps,\n      Math.max(0, lastMeasuredIndex),\n      offset\n    );\n  }\n};\n\nconst findNearestItemBinarySearch = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  high: number,\n  low: number,\n  offset: number\n): number => {\n  while (low <= high) {\n    const middle = low + Math.floor((high - low) / 2);\n    const currentOffset = getItemMetadata(props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nconst findNearestItemExponentialSearch = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  index: number,\n  offset: number\n): number => {\n  const { itemCount } = props;\n  let interval = 1;\n\n  while (\n    index < itemCount &&\n    getItemMetadata(props, index, instanceProps).offset < offset\n  ) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch(\n    props,\n    instanceProps,\n    Math.min(index, itemCount - 1),\n    Math.floor(index / 2),\n    offset\n  );\n};\n\nconst getEstimatedTotalSize = (\n  { itemCount }: Props<any>,\n  { itemMetadataMap, estimatedItemSize, lastMeasuredIndex }: InstanceProps\n) => {\n  let totalSizeOfMeasuredItems = 0;\n\n  // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n  if (lastMeasuredIndex >= itemCount) {\n    lastMeasuredIndex = itemCount - 1;\n  }\n\n  if (lastMeasuredIndex >= 0) {\n    const itemMetadata = itemMetadataMap[lastMeasuredIndex];\n    totalSizeOfMeasuredItems = itemMetadata.offset + itemMetadata.size;\n  }\n\n  const numUnmeasuredItems = itemCount - lastMeasuredIndex - 1;\n  const totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedItemSize;\n\n  return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;\n};\n\nconst VariableSizeList = createListComponent({\n  getItemOffset: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => getItemMetadata(props, index, instanceProps).offset,\n\n  getItemSize: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => instanceProps.itemMetadataMap[index].size,\n\n  getEstimatedTotalSize,\n\n  getOffsetForIndexAndAlignment: (\n    props: Props<any>,\n    index: number,\n    align: ScrollToAlign,\n    scrollOffset: number,\n    instanceProps: InstanceProps\n  ): number => {\n    const { height, layout, width } = props;\n\n    const isHorizontal = layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const itemMetadata = getItemMetadata(props, index, instanceProps);\n\n    // Get estimated total size after ItemMetadata is computed,\n    // To ensure it reflects actual measurements instead of just estimates.\n    const estimatedTotalSize = getEstimatedTotalSize(props, instanceProps);\n\n    const maxOffset = Math.max(\n      0,\n      Math.min(estimatedTotalSize - size, itemMetadata.offset)\n    );\n    const minOffset = Math.max(\n      0,\n      itemMetadata.offset - size + itemMetadata.size\n    );\n\n    if (align === 'smart') {\n      if (\n        scrollOffset >= minOffset - size &&\n        scrollOffset <= maxOffset + size\n      ) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center':\n        return Math.round(minOffset + (maxOffset - minOffset) / 2);\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n\n  getStartIndexForOffset: (\n    props: Props<any>,\n    offset: number,\n    instanceProps: InstanceProps\n  ): number => findNearestItem(props, instanceProps, offset),\n\n  getStopIndexForStartIndex: (\n    props: Props<any>,\n    startIndex: number,\n    scrollOffset: number,\n    instanceProps: InstanceProps\n  ): number => {\n    const { height, itemCount, layout, width } = props;\n\n    const isHorizontal = layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const itemMetadata = getItemMetadata(props, startIndex, instanceProps);\n    const maxOffset = scrollOffset + size;\n\n    let offset = itemMetadata.offset + itemMetadata.size;\n    let stopIndex = startIndex;\n\n    while (stopIndex < itemCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata(props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n\n  initInstanceProps(props: Props<any>, instance: any): InstanceProps {\n    const { estimatedItemSize } = ((props: any): VariableSizeProps);\n\n    const instanceProps = {\n      itemMetadataMap: {},\n      estimatedItemSize: estimatedItemSize || DEFAULT_ESTIMATED_ITEM_SIZE,\n      lastMeasuredIndex: -1,\n    };\n\n    instance.resetAfterIndex = (\n      index: number,\n      shouldForceUpdate?: boolean = true\n    ) => {\n      instanceProps.lastMeasuredIndex = Math.min(\n        instanceProps.lastMeasuredIndex,\n        index - 1\n      );\n\n      // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n\n  shouldResetStyleCacheOnItemSizeChange: false,\n\n  validateProps: ({ itemSize }: Props<any>): void => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'function') {\n        throw Error(\n          'An invalid \"itemSize\" prop has been specified. ' +\n            'Value should be a function. ' +\n            `\"${itemSize === null ? 'null' : typeof itemSize}\" was specified.`\n        );\n      }\n    }\n  },\n});\n\nexport default VariableSizeList;\n","// @flow\n\nimport createListComponent from './createListComponent';\n\nimport type { Props, ScrollToAlign } from './createListComponent';\n\nconst FixedSizeList = createListComponent({\n  getItemOffset: ({ itemSize }: Props<any>, index: number): number =>\n    index * ((itemSize: any): number),\n\n  getItemSize: ({ itemSize }: Props<any>, index: number): number =>\n    ((itemSize: any): number),\n\n  getEstimatedTotalSize: ({ itemCount, itemSize }: Props<any>) =>\n    ((itemSize: any): number) * itemCount,\n\n  getOffsetForIndexAndAlignment: (\n    { direction, height, itemCount, itemSize, layout, width }: Props<any>,\n    index: number,\n    align: ScrollToAlign,\n    scrollOffset: number\n  ): number => {\n    const isHorizontal = layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const lastItemOffset = Math.max(\n      0,\n      itemCount * ((itemSize: any): number) - size\n    );\n    const maxOffset = Math.min(\n      lastItemOffset,\n      index * ((itemSize: any): number)\n    );\n    const minOffset = Math.max(\n      0,\n      index * ((itemSize: any): number) - size + ((itemSize: any): number)\n    );\n\n    if (align === 'smart') {\n      if (\n        scrollOffset >= minOffset - size &&\n        scrollOffset <= maxOffset + size\n      ) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center': {\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        const middleOffset = Math.round(\n          minOffset + (maxOffset - minOffset) / 2\n        );\n        if (middleOffset < Math.ceil(size / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastItemOffset + Math.floor(size / 2)) {\n          return lastItemOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n      }\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n\n  getStartIndexForOffset: (\n    { itemCount, itemSize }: Props<any>,\n    offset: number\n  ): number =>\n    Math.max(\n      0,\n      Math.min(itemCount - 1, Math.floor(offset / ((itemSize: any): number)))\n    ),\n\n  getStopIndexForStartIndex: (\n    { direction, height, itemCount, itemSize, layout, width }: Props<any>,\n    startIndex: number,\n    scrollOffset: number\n  ): number => {\n    const isHorizontal = layout === 'horizontal';\n    const offset = startIndex * ((itemSize: any): number);\n    const size = (((isHorizontal ? width : height): any): number);\n    const numVisibleItems = Math.ceil(\n      (size + scrollOffset - offset) / ((itemSize: any): number)\n    );\n    return Math.max(\n      0,\n      Math.min(\n        itemCount - 1,\n        startIndex + numVisibleItems - 1 // -1 is because stop index is inclusive\n      )\n    );\n  },\n\n  initInstanceProps(props: Props<any>): any {\n    // Noop\n  },\n\n  shouldResetStyleCacheOnItemSizeChange: true,\n\n  validateProps: ({ itemSize }: Props<any>): void => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'number') {\n        throw Error(\n          'An invalid \"itemSize\" prop has been specified. ' +\n            'Value should be a number. ' +\n            `\"${itemSize === null ? 'null' : typeof itemSize}\" was specified.`\n        );\n      }\n    }\n  },\n});\n\nexport default FixedSizeList;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// @flow\n\n// Pulled from react-compat\n// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349\nexport default function shallowDiffers(prev: Object, next: Object): boolean {\n  for (let attribute in prev) {\n    if (!(attribute in next)) {\n      return true;\n    }\n  }\n  for (let attribute in next) {\n    if (prev[attribute] !== next[attribute]) {\n      return true;\n    }\n  }\n  return false;\n}\n","// @flow\n\nimport shallowDiffers from './shallowDiffers';\n\n// Custom comparison function for React.memo().\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-api.html#reactmemo\nexport default function areEqual(\n  prevProps: Object,\n  nextProps: Object\n): boolean {\n  const { style: prevStyle, ...prevRest } = prevProps;\n  const { style: nextStyle, ...nextRest } = nextProps;\n\n  return (\n    !shallowDiffers(prevStyle, nextStyle) && !shallowDiffers(prevRest, nextRest)\n  );\n}\n","// @flow\n\nimport areEqual from './areEqual';\nimport shallowDiffers from './shallowDiffers';\n\n// Custom shouldComponentUpdate for class components.\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-component.html#shouldcomponentupdate\nexport default function shouldComponentUpdate(\n  nextProps: Object,\n  nextState: Object\n): boolean {\n  return (\n    !areEqual(this.props, nextProps) || shallowDiffers(this.state, nextState)\n  );\n}\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","o","p","setPrototypeOf","__proto__","safeIsNaN","Number","isNaN","value","areInputsEqual","newInputs","lastInputs","first","second","memoizeOne","resultFn","isEqual","lastThis","lastResult","lastArgs","calledOnce","newArgs","_i","now","performance","Date","cancelTimeout","timeoutID","cancelAnimationFrame","id","defaultItemKey","index","data","createListComponent","getItemOffset","getItemSize","getEstimatedTotalSize","getOffsetForIndexAndAlignment","getStartIndexForOffset","getStopIndexForStartIndex","initInstanceProps","shouldResetStyleCacheOnItemSizeChange","validateProps","subClass","superClass","props","_instanceProps","_this","_outerRef","_innerRef","_clearStyleCacheTimeoutID","_callOnItemsRendered","overscanStartIndex","overscanStopIndex","visibleStartIndex","visibleStopIndex","onItemsRendered","_getItemStyle","style","itemSize","layout","itemStyleCache","_getItemStyleCache","offset","size","isHorizontal","transform","height","width","willChange","transition","_","__","___","_outerRefSetter","ref","outerRef","current","_innerRefSetter","innerRef","_clearStyleCache","initialScrollOffset","scrollOffset","state","instance","scrollDirection","scrollUpdateWasRequested","create","constructor","getDerivedStateFromProps","nextProps","prevState","validateSharedProps","scrollTo","Math","max","setState","scrollToItem","align","itemCount","min","componentDidMount","_commitHook","componentDidUpdate","componentWillUnmount","render","children","className","innerElementType","itemData","itemKey","outerElementType","_getRangeToRender","startIndex","stopIndex","items","hidden","push","createElement","position","WebkitOverflowScrolling","contain","pointerEvents","_callPropsCallbacks","_clearStyleCacheDebounced","overscanCount","overscanBackward","overscanForward","callback","delay","start","requestAnimationFrame","tick","PureComponent","defaultProps","undefined","innerTagName","outerTagName","Error","getItemMetadata","instanceProps","itemMetadataMap","lastMeasuredIndex","itemMetadata","findNearestItemBinarySearch","high","low","middle","floor","currentOffset","findNearestItemExponentialSearch","interval","estimatedItemSize","totalSizeOfMeasuredItems","VariableSizeList","estimatedTotalSize","maxOffset","minOffset","round","findNearestItem","resetAfterIndex","shouldForceUpdate","forceUpdate","FixedSizeList","direction","lastItemOffset","middleOffset","ceil","numVisibleItems","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","shallowDiffers","prev","next","attribute","areEqual","prevProps","prevStyle","prevRest","nextStyle","nextRest","nextState"],"mappings":"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"}