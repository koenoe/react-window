{"version":3,"file":"index-prod.umd.js","sources":["../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/memoize-one/dist/memoize-one.esm.js","../src/timer.js","../src/createListComponent.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../src/VariableSizeList.js","../src/FixedSizeList.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../src/shallowDiffers.js","../src/areEqual.js","../src/shouldComponentUpdate.js"],"sourcesContent":["export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","var shallowEqual = function shallowEqual(newValue, oldValue) {\n  return newValue === oldValue;\n};\n\nvar simpleIsEqual = function simpleIsEqual(newArgs, lastArgs) {\n  return newArgs.length === lastArgs.length && newArgs.every(function (newArg, index) {\n    return shallowEqual(newArg, lastArgs[index]);\n  });\n};\n\nfunction index (resultFn, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = simpleIsEqual;\n  }\n\n  var lastThis;\n  var lastArgs = [];\n  var lastResult;\n  var calledOnce = false;\n\n  var result = function result() {\n    for (var _len = arguments.length, newArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n      newArgs[_key] = arguments[_key];\n    }\n\n    if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n      return lastResult;\n    }\n\n    lastResult = resultFn.apply(this, newArgs);\n    calledOnce = true;\n    lastThis = this;\n    lastArgs = newArgs;\n    return lastResult;\n  };\n\n  return result;\n}\n\nexport default index;\n","// @flow\n\n// Animation frame based implementation of setTimeout.\n// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js\n\nconst hasNativePerformanceNow =\n  typeof performance === 'object' && typeof performance.now === 'function';\n\nconst now = hasNativePerformanceNow\n  ? () => performance.now()\n  : () => Date.now();\n\nexport type TimeoutID = {|\n  id: AnimationFrameID,\n|};\n\nexport function cancelTimeout(timeoutID: TimeoutID) {\n  cancelAnimationFrame(timeoutID.id);\n}\n\nexport function requestTimeout(callback: Function, delay: number): TimeoutID {\n  const start = now();\n\n  function tick() {\n    if (now() - start >= delay) {\n      callback.call(null);\n    } else {\n      timeoutID.id = requestAnimationFrame(tick);\n    }\n  }\n\n  const timeoutID: TimeoutID = {\n    id: requestAnimationFrame(tick),\n  };\n\n  return timeoutID;\n}\n","// @flow\n\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport { cancelTimeout, requestTimeout } from './timer';\n\nimport type { TimeoutID } from './timer';\n\nexport type ScrollToAlign = 'auto' | 'smart' | 'center' | 'start' | 'end';\n\ntype itemSize = number | ((index: number) => number);\n// TODO Deprecate directions \"horizontal\" and \"vertical\"\ntype Direction = 'horizontal' | 'vertical';\ntype Layout = 'horizontal' | 'vertical';\n\ntype RenderComponentProps<T> = {|\n  data: T,\n  index: number,\n  isScrolling?: boolean,\n  style: Object,\n|};\ntype RenderComponent<T> = React$ComponentType<$Shape<RenderComponentProps<T>>>;\n\ntype ScrollDirection = 'forward' | 'backward';\n\ntype onItemsRenderedCallback = ({\n  overscanStartIndex: number,\n  overscanStopIndex: number,\n  visibleStartIndex: number,\n  visibleStopIndex: number,\n}) => void;\ntype onScrollCallback = ({\n  scrollDirection: ScrollDirection,\n  scrollOffset: number,\n  scrollUpdateWasRequested: boolean,\n}) => void;\n\ntype ScrollEvent = SyntheticEvent<HTMLDivElement>;\ntype ItemStyleCache = { [index: number]: Object };\n\ntype OuterProps = {|\n  children: React$Node,\n  className: string | void,\n  onScroll: ScrollEvent => void,\n  style: {\n    [string]: mixed,\n  },\n|};\n\ntype InnerProps = {|\n  children: React$Node,\n  style: {\n    [string]: mixed,\n  },\n|};\n\nexport type Props<T> = {|\n  children: RenderComponent<T>,\n  className?: string,\n  direction: Direction,\n  height: number | string,\n  initialScrollOffset?: number,\n  innerRef?: any,\n  innerElementType?: string | React$AbstractComponent<InnerProps, any>,\n  innerTagName?: string, // deprecated\n  itemCount: number,\n  itemData: T,\n  itemKey?: (index: number, data: T) => any,\n  itemSize: itemSize,\n  layout: Layout,\n  onItemsRendered?: onItemsRenderedCallback,\n  onScroll?: onScrollCallback,\n  outerRef?: any,\n  outerElementType?: string | React$AbstractComponent<OuterProps, any>,\n  outerTagName?: string, // deprecated\n  overscanCount: number,\n  style?: Object,\n  useIsScrolling: boolean,\n  width: number | string,\n|};\n\ntype State = {|\n  instance: any,\n  isScrolling: boolean,\n  scrollDirection: ScrollDirection,\n  scrollOffset: number,\n  scrollUpdateWasRequested: boolean,\n|};\n\ntype GetItemOffset = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype GetItemSize = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype GetEstimatedTotalSize = (props: Props<any>, instanceProps: any) => number;\ntype GetOffsetForIndexAndAlignment = (\n  props: Props<any>,\n  index: number,\n  align: ScrollToAlign,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype GetStartIndexForOffset = (\n  props: Props<any>,\n  offset: number,\n  instanceProps: any\n) => number;\ntype GetStopIndexForStartIndex = (\n  props: Props<any>,\n  startIndex: number,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype InitInstanceProps = (props: Props<any>, instance: any) => any;\ntype ValidateProps = (props: Props<any>) => void;\n\nconst IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nconst defaultItemKey = (index: number, data: any) => index;\n\n// In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\nlet devWarningsDirection = null;\nlet devWarningsTagName = null;\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsDirection = new WeakSet();\n    devWarningsTagName = new WeakSet();\n  }\n}\n\nexport default function createListComponent({\n  getItemOffset,\n  getEstimatedTotalSize,\n  getItemSize,\n  getOffsetForIndexAndAlignment,\n  getStartIndexForOffset,\n  getStopIndexForStartIndex,\n  initInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange,\n  validateProps,\n}: {|\n  getItemOffset: GetItemOffset,\n  getEstimatedTotalSize: GetEstimatedTotalSize,\n  getItemSize: GetItemSize,\n  getOffsetForIndexAndAlignment: GetOffsetForIndexAndAlignment,\n  getStartIndexForOffset: GetStartIndexForOffset,\n  getStopIndexForStartIndex: GetStopIndexForStartIndex,\n  initInstanceProps: InitInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange: boolean,\n  validateProps: ValidateProps,\n|}) {\n  return class List<T> extends PureComponent<Props<T>, State> {\n    _instanceProps: any = initInstanceProps(this.props, this);\n    _outerRef: ?HTMLDivElement;\n    _innerRef: ?HTMLDivElement;\n    _resetIsScrollingTimeoutId: TimeoutID | null = null;\n\n    static defaultProps = {\n      direction: 'ltr',\n      itemData: undefined,\n      layout: 'vertical',\n      overscanCount: 2,\n      useIsScrolling: false,\n    };\n\n    state: State = {\n      instance: this,\n      isScrolling: false,\n      scrollDirection: 'forward',\n      scrollOffset:\n        typeof this.props.initialScrollOffset === 'number'\n          ? this.props.initialScrollOffset\n          : 0,\n      scrollUpdateWasRequested: false,\n    };\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props: Props<T>) {\n      super(props);\n    }\n\n    static getDerivedStateFromProps(\n      nextProps: Props<T>,\n      prevState: State\n    ): $Shape<State> | null {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    }\n\n    scrollTo(scrollOffset: number): void {\n      scrollOffset = Math.max(0, scrollOffset);\n\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollOffset) {\n          return null;\n        }\n        return {\n          scrollDirection:\n            prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: true,\n        };\n      }, this._resetIsScrollingDebounced);\n    }\n\n    scrollToItem(index: number, align: ScrollToAlign = 'auto'): void {\n      const { itemCount } = this.props;\n      const { scrollOffset } = this.state;\n\n      index = Math.max(0, Math.min(index, itemCount - 1));\n\n      this.scrollTo(\n        getOffsetForIndexAndAlignment(\n          this.props,\n          index,\n          align,\n          scrollOffset,\n          this._instanceProps\n        )\n      );\n    }\n\n    componentDidMount() {\n      const { direction, initialScrollOffset, layout } = this.props;\n\n      if (typeof initialScrollOffset === 'number' && this._innerRef != null) {\n        const innerRef = ((this._innerRef: any): HTMLElement);\n        // TODO Deprecate direction \"horizontal\"\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          innerRef.style.transform = `translate3d(-${initialScrollOffset}px, 0px, 0px)`;\n        } else {\n          innerRef.style.transform = `translate3d(0px, -${initialScrollOffset}px, 0px)`;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentDidUpdate() {\n      const { direction, layout } = this.props;\n      const { scrollOffset, scrollUpdateWasRequested } = this.state;\n\n      if (scrollUpdateWasRequested && this._innerRef != null) {\n        const innerRef = ((this._innerRef: any): HTMLElement);\n\n        // TODO Deprecate direction \"horizontal\"\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          innerRef.style.transform = `translate3d(-${scrollOffset}px, 0px, 0px)`;\n        } else {\n          innerRef.style.transform = `translate3d(0px, -${scrollOffset}px, 0px)`;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    }\n\n    render() {\n      const {\n        children,\n        className,\n        direction,\n        innerElementType,\n        innerTagName,\n        itemCount,\n        itemData,\n        itemKey = defaultItemKey,\n        layout,\n        outerElementType,\n        outerTagName,\n        style,\n        useIsScrolling,\n      } = this.props;\n      const { isScrolling } = this.state;\n\n      // TODO Deprecate direction \"horizontal\"\n      const isHorizontal =\n        direction === 'horizontal' || layout === 'horizontal';\n\n      const onScroll = isHorizontal\n        ? this._onScrollHorizontal\n        : this._onScrollVertical;\n\n      const [startIndex, stopIndex] = this._getRangeToRender();\n\n      const items = [];\n      if (itemCount > 0) {\n        for (let index = startIndex; index <= stopIndex; index++) {\n          items.push(\n            createElement(children, {\n              data: itemData,\n              key: itemKey(index, itemData),\n              index,\n              isScrolling: useIsScrolling ? isScrolling : undefined,\n              style: this._getItemStyle(index),\n            })\n          );\n        }\n      }\n\n      return createElement(\n        outerElementType || outerTagName || 'div',\n        {\n          className,\n          onScroll,\n          ref: this._outerRefSetter,\n          style: {\n            position: 'relative',\n            WebkitOverflowScrolling: 'touch',\n            willChange: 'transform',\n            contain: 'layout',\n            ...style,\n          },\n        },\n        createElement(innerElementType || innerTagName || 'div', {\n          children: items,\n          ref: this._innerRefSetter,\n          style: {\n            position: 'relative',\n            willChange: 'transform',\n            contain: 'layout',\n            backfaceVisibility: 'hidden',\n            transformStyle: 'preserve-3d',\n          },\n        })\n      );\n    }\n\n    _callOnItemsRendered: (\n      overscanStartIndex: number,\n      overscanStopIndex: number,\n      visibleStartIndex: number,\n      visibleStopIndex: number\n    ) => void;\n    _callOnItemsRendered = memoizeOne(\n      (\n        overscanStartIndex: number,\n        overscanStopIndex: number,\n        visibleStartIndex: number,\n        visibleStopIndex: number\n      ) =>\n        ((this.props.onItemsRendered: any): onItemsRenderedCallback)({\n          overscanStartIndex,\n          overscanStopIndex,\n          visibleStartIndex,\n          visibleStopIndex,\n        })\n    );\n\n    _callOnScroll: (\n      scrollDirection: ScrollDirection,\n      scrollOffset: number,\n      scrollUpdateWasRequested: boolean\n    ) => void;\n    _callOnScroll = memoizeOne(\n      (\n        scrollDirection: ScrollDirection,\n        scrollOffset: number,\n        scrollUpdateWasRequested: boolean\n      ) =>\n        ((this.props.onScroll: any): onScrollCallback)({\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested,\n        })\n    );\n\n    _callPropsCallbacks() {\n      if (typeof this.props.onItemsRendered === 'function') {\n        const { itemCount } = this.props;\n        if (itemCount > 0) {\n          const [\n            overscanStartIndex,\n            overscanStopIndex,\n            visibleStartIndex,\n            visibleStopIndex,\n          ] = this._getRangeToRender();\n          this._callOnItemsRendered(\n            overscanStartIndex,\n            overscanStopIndex,\n            visibleStartIndex,\n            visibleStopIndex\n          );\n        }\n      }\n\n      if (typeof this.props.onScroll === 'function') {\n        const {\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested,\n        } = this.state;\n        this._callOnScroll(\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested\n        );\n      }\n    }\n\n    // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    _getItemStyle: (index: number) => Object;\n    _getItemStyle = (index: number): Object => {\n      const { direction, itemSize, layout } = this.props;\n\n      const itemStyleCache = this._getItemStyleCache(\n        shouldResetStyleCacheOnItemSizeChange && itemSize,\n        shouldResetStyleCacheOnItemSizeChange && layout,\n        shouldResetStyleCacheOnItemSizeChange && direction\n      );\n\n      let style;\n      if (itemStyleCache.hasOwnProperty(index)) {\n        style = itemStyleCache[index];\n      } else {\n        const offset = getItemOffset(this.props, index, this._instanceProps);\n        const size = getItemSize(this.props, index, this._instanceProps);\n\n        // TODO Deprecate direction \"horizontal\"\n        const isHorizontal =\n          direction === 'horizontal' || layout === 'horizontal';\n\n        const offsetHorizontal = isHorizontal ? offset : 0;\n        itemStyleCache[index] = style = {\n          left: offsetHorizontal,\n          right: undefined,\n          top: !isHorizontal ? offset : 0,\n          height: !isHorizontal ? size : '100%',\n          width: isHorizontal ? size : '100%',\n        };\n      }\n\n      return style;\n    };\n\n    _getItemStyleCache: (_: any, __: any, ___: any) => ItemStyleCache;\n    _getItemStyleCache = memoizeOne((_: any, __: any, ___: any) => ({}));\n\n    _getRangeToRender(): [number, number, number, number] {\n      const { itemCount, overscanCount } = this.props;\n      const { isScrolling, scrollDirection, scrollOffset } = this.state;\n\n      if (itemCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getStartIndexForOffset(\n        this.props,\n        scrollOffset,\n        this._instanceProps\n      );\n      const stopIndex = getStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollOffset,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || scrollDirection === 'backward'\n          ? Math.max(1, overscanCount)\n          : 1;\n      const overscanForward =\n        !isScrolling || scrollDirection === 'forward'\n          ? Math.max(1, overscanCount)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(itemCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _onScrollHorizontal = (event: ScrollEvent): void => {\n      const { clientWidth, scrollLeft, scrollWidth } = event.currentTarget;\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollLeft) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        let scrollOffset = scrollLeft;\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        scrollOffset = Math.max(\n          0,\n          Math.min(scrollOffset, scrollWidth - clientWidth)\n        );\n\n        return {\n          isScrolling: true,\n          scrollDirection:\n            prevState.scrollOffset < scrollLeft ? 'forward' : 'backward',\n          scrollOffset,\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _onScrollVertical = (event: ScrollEvent): void => {\n      const { clientHeight, scrollHeight, scrollTop } = event.currentTarget;\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollTop) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        const scrollOffset = Math.max(\n          0,\n          Math.min(scrollTop, scrollHeight - clientHeight)\n        );\n\n        return {\n          isScrolling: true,\n          scrollDirection:\n            prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset,\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _outerRefSetter = (ref: any): void => {\n      const { outerRef } = this.props;\n\n      this._outerRef = ((ref: any): HTMLDivElement);\n\n      if (typeof outerRef === 'function') {\n        outerRef(ref);\n      } else if (\n        outerRef != null &&\n        typeof outerRef === 'object' &&\n        outerRef.hasOwnProperty('current')\n      ) {\n        outerRef.current = ref;\n      }\n    };\n\n    _innerRefSetter = (ref: any): void => {\n      const { innerRef } = this.props;\n\n      this._innerRef = ((ref: any): HTMLDivElement);\n\n      if (typeof innerRef === 'function') {\n        innerRef(ref);\n      } else if (\n        innerRef != null &&\n        typeof innerRef === 'object' &&\n        innerRef.hasOwnProperty('current')\n      ) {\n        innerRef.current = ref;\n      }\n    };\n\n    _resetIsScrollingDebounced = () => {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n\n      this._resetIsScrollingTimeoutId = requestTimeout(\n        this._resetIsScrolling,\n        IS_SCROLLING_DEBOUNCE_INTERVAL\n      );\n    };\n\n    _resetIsScrolling = () => {\n      this._resetIsScrollingTimeoutId = null;\n\n      this.setState({ isScrolling: false }, () => {\n        // Clear style cache after state update has been committed.\n        // This way we don't break pure sCU for items that don't use isScrolling param.\n        this._getItemStyleCache(-1, null);\n      });\n    };\n  };\n}\n\n// NOTE: I considered further wrapping individual items with a pure ListItem component.\n// This would avoid ever calling the render function for the same index more than once,\n// But it would also add the overhead of a lot of components/fibers.\n// I assume people already do this (render function returning a class component),\n// So my doing it would just unnecessarily double the wrappers.\n\nconst validateSharedProps = (\n  {\n    children,\n    direction,\n    height,\n    layout,\n    innerTagName,\n    outerTagName,\n    width,\n  }: Props<any>,\n  { instance }: State\n): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn(\n          'The innerTagName and outerTagName props have been deprecated. ' +\n            'Please use the innerElementType and outerElementType props instead.'\n        );\n      }\n    }\n\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n\n    switch (direction) {\n      case 'horizontal':\n      case 'vertical':\n        if (devWarningsDirection && !devWarningsDirection.has(instance)) {\n          devWarningsDirection.add(instance);\n          console.warn(\n            'The direction prop should be either \"ltr\" (default) or \"rtl\". ' +\n              'Please use the layout prop to specify \"vertical\" (default) or \"horizontal\" orientation.'\n          );\n        }\n        break;\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"direction\" prop has been specified. ' +\n            'Value should be either \"ltr\" or \"rtl\". ' +\n            `\"${direction}\" was specified.`\n        );\n    }\n\n    switch (layout) {\n      case 'horizontal':\n      case 'vertical':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"layout\" prop has been specified. ' +\n            'Value should be either \"horizontal\" or \"vertical\". ' +\n            `\"${layout}\" was specified.`\n        );\n    }\n\n    if (children == null) {\n      throw Error(\n        'An invalid \"children\" prop has been specified. ' +\n          'Value should be a React component. ' +\n          `\"${children === null ? 'null' : typeof children}\" was specified.`\n      );\n    }\n\n    if (isHorizontal && typeof width !== 'number') {\n      throw Error(\n        'An invalid \"width\" prop has been specified. ' +\n          'Horizontal lists must specify a number for width. ' +\n          `\"${width === null ? 'null' : typeof width}\" was specified.`\n      );\n    } else if (!isHorizontal && typeof height !== 'number') {\n      throw Error(\n        'An invalid \"height\" prop has been specified. ' +\n          'Vertical lists must specify a number for height. ' +\n          `\"${height === null ? 'null' : typeof height}\" was specified.`\n      );\n    }\n  }\n};\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","// @flow\n\nimport createListComponent from './createListComponent';\n\nimport type { Props, ScrollToAlign } from './createListComponent';\n\nconst DEFAULT_ESTIMATED_ITEM_SIZE = 50;\n\ntype VariableSizeProps = {|\n  estimatedItemSize: number,\n  ...Props<any>,\n|};\n\ntype itemSizeGetter = (index: number) => number;\n\ntype ItemMetadata = {|\n  offset: number,\n  size: number,\n|};\ntype InstanceProps = {|\n  itemMetadataMap: { [index: number]: ItemMetadata },\n  estimatedItemSize: number,\n  lastMeasuredIndex: number,\n|};\n\nconst getItemMetadata = (\n  props: Props<any>,\n  index: number,\n  instanceProps: InstanceProps\n): ItemMetadata => {\n  const { itemSize } = ((props: any): VariableSizeProps);\n  const { itemMetadataMap, lastMeasuredIndex } = instanceProps;\n\n  if (index > lastMeasuredIndex) {\n    let offset = 0;\n    if (lastMeasuredIndex >= 0) {\n      const itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (let i = lastMeasuredIndex + 1; i <= index; i++) {\n      let size = ((itemSize: any): itemSizeGetter)(i);\n\n      itemMetadataMap[i] = {\n        offset,\n        size,\n      };\n\n      offset += size;\n    }\n\n    instanceProps.lastMeasuredIndex = index;\n  }\n\n  return itemMetadataMap[index];\n};\n\nconst findNearestItem = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  offset: number\n) => {\n  const { itemMetadataMap, lastMeasuredIndex } = instanceProps;\n\n  const lastMeasuredItemOffset =\n    lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch(\n      props,\n      instanceProps,\n      lastMeasuredIndex,\n      0,\n      offset\n    );\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch(\n      props,\n      instanceProps,\n      Math.max(0, lastMeasuredIndex),\n      offset\n    );\n  }\n};\n\nconst findNearestItemBinarySearch = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  high: number,\n  low: number,\n  offset: number\n): number => {\n  while (low <= high) {\n    const middle = low + Math.floor((high - low) / 2);\n    const currentOffset = getItemMetadata(props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nconst findNearestItemExponentialSearch = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  index: number,\n  offset: number\n): number => {\n  const { itemCount } = props;\n  let interval = 1;\n\n  while (\n    index < itemCount &&\n    getItemMetadata(props, index, instanceProps).offset < offset\n  ) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch(\n    props,\n    instanceProps,\n    Math.min(index, itemCount - 1),\n    Math.floor(index / 2),\n    offset\n  );\n};\n\nconst getEstimatedTotalSize = (\n  { itemCount }: Props<any>,\n  { itemMetadataMap, estimatedItemSize, lastMeasuredIndex }: InstanceProps\n) => {\n  let totalSizeOfMeasuredItems = 0;\n\n  // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n  if (lastMeasuredIndex >= itemCount) {\n    lastMeasuredIndex = itemCount - 1;\n  }\n\n  if (lastMeasuredIndex >= 0) {\n    const itemMetadata = itemMetadataMap[lastMeasuredIndex];\n    totalSizeOfMeasuredItems = itemMetadata.offset + itemMetadata.size;\n  }\n\n  const numUnmeasuredItems = itemCount - lastMeasuredIndex - 1;\n  const totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedItemSize;\n\n  return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;\n};\n\nconst VariableSizeList = createListComponent({\n  getItemOffset: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => getItemMetadata(props, index, instanceProps).offset,\n\n  getItemSize: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => instanceProps.itemMetadataMap[index].size,\n\n  getEstimatedTotalSize,\n\n  getOffsetForIndexAndAlignment: (\n    props: Props<any>,\n    index: number,\n    align: ScrollToAlign,\n    scrollOffset: number,\n    instanceProps: InstanceProps\n  ): number => {\n    const { direction, height, layout, width } = props;\n\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const itemMetadata = getItemMetadata(props, index, instanceProps);\n\n    // Get estimated total size after ItemMetadata is computed,\n    // To ensure it reflects actual measurements instead of just estimates.\n    const estimatedTotalSize = getEstimatedTotalSize(props, instanceProps);\n\n    const maxOffset = Math.max(\n      0,\n      Math.min(estimatedTotalSize - size, itemMetadata.offset)\n    );\n    const minOffset = Math.max(\n      0,\n      itemMetadata.offset - size + itemMetadata.size\n    );\n\n    if (align === 'smart') {\n      if (\n        scrollOffset >= minOffset - size &&\n        scrollOffset <= maxOffset + size\n      ) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center':\n        return Math.round(minOffset + (maxOffset - minOffset) / 2);\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n\n  getStartIndexForOffset: (\n    props: Props<any>,\n    offset: number,\n    instanceProps: InstanceProps\n  ): number => findNearestItem(props, instanceProps, offset),\n\n  getStopIndexForStartIndex: (\n    props: Props<any>,\n    startIndex: number,\n    scrollOffset: number,\n    instanceProps: InstanceProps\n  ): number => {\n    const { direction, height, itemCount, layout, width } = props;\n\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const itemMetadata = getItemMetadata(props, startIndex, instanceProps);\n    const maxOffset = scrollOffset + size;\n\n    let offset = itemMetadata.offset + itemMetadata.size;\n    let stopIndex = startIndex;\n\n    while (stopIndex < itemCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata(props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n\n  initInstanceProps(props: Props<any>, instance: any): InstanceProps {\n    const { estimatedItemSize } = ((props: any): VariableSizeProps);\n\n    const instanceProps = {\n      itemMetadataMap: {},\n      estimatedItemSize: estimatedItemSize || DEFAULT_ESTIMATED_ITEM_SIZE,\n      lastMeasuredIndex: -1,\n    };\n\n    instance.resetAfterIndex = (\n      index: number,\n      shouldForceUpdate?: boolean = true\n    ) => {\n      instanceProps.lastMeasuredIndex = Math.min(\n        instanceProps.lastMeasuredIndex,\n        index - 1\n      );\n\n      // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n\n  shouldResetStyleCacheOnItemSizeChange: false,\n\n  validateProps: ({ itemSize }: Props<any>): void => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'function') {\n        throw Error(\n          'An invalid \"itemSize\" prop has been specified. ' +\n            'Value should be a function. ' +\n            `\"${itemSize === null ? 'null' : typeof itemSize}\" was specified.`\n        );\n      }\n    }\n  },\n});\n\nexport default VariableSizeList;\n","// @flow\n\nimport createListComponent from './createListComponent';\n\nimport type { Props, ScrollToAlign } from './createListComponent';\n\nconst FixedSizeList = createListComponent({\n  getItemOffset: ({ itemSize }: Props<any>, index: number): number =>\n    index * ((itemSize: any): number),\n\n  getItemSize: ({ itemSize }: Props<any>, index: number): number =>\n    ((itemSize: any): number),\n\n  getEstimatedTotalSize: ({ itemCount, itemSize }: Props<any>) =>\n    ((itemSize: any): number) * itemCount,\n\n  getOffsetForIndexAndAlignment: (\n    { direction, height, itemCount, itemSize, layout, width }: Props<any>,\n    index: number,\n    align: ScrollToAlign,\n    scrollOffset: number\n  ): number => {\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const lastItemOffset = Math.max(\n      0,\n      itemCount * ((itemSize: any): number) - size\n    );\n    const maxOffset = Math.min(\n      lastItemOffset,\n      index * ((itemSize: any): number)\n    );\n    const minOffset = Math.max(\n      0,\n      index * ((itemSize: any): number) - size + ((itemSize: any): number)\n    );\n\n    if (align === 'smart') {\n      if (\n        scrollOffset >= minOffset - size &&\n        scrollOffset <= maxOffset + size\n      ) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center': {\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        const middleOffset = Math.round(\n          minOffset + (maxOffset - minOffset) / 2\n        );\n        if (middleOffset < Math.ceil(size / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastItemOffset + Math.floor(size / 2)) {\n          return lastItemOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n      }\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n\n  getStartIndexForOffset: (\n    { itemCount, itemSize }: Props<any>,\n    offset: number\n  ): number =>\n    Math.max(\n      0,\n      Math.min(itemCount - 1, Math.floor(offset / ((itemSize: any): number)))\n    ),\n\n  getStopIndexForStartIndex: (\n    { direction, height, itemCount, itemSize, layout, width }: Props<any>,\n    startIndex: number,\n    scrollOffset: number\n  ): number => {\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const offset = startIndex * ((itemSize: any): number);\n    const size = (((isHorizontal ? width : height): any): number);\n    const numVisibleItems = Math.ceil(\n      (size + scrollOffset - offset) / ((itemSize: any): number)\n    );\n    return Math.max(\n      0,\n      Math.min(\n        itemCount - 1,\n        startIndex + numVisibleItems - 1 // -1 is because stop index is inclusive\n      )\n    );\n  },\n\n  initInstanceProps(props: Props<any>): any {\n    // Noop\n  },\n\n  shouldResetStyleCacheOnItemSizeChange: true,\n\n  validateProps: ({ itemSize }: Props<any>): void => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'number') {\n        throw Error(\n          'An invalid \"itemSize\" prop has been specified. ' +\n            'Value should be a number. ' +\n            `\"${itemSize === null ? 'null' : typeof itemSize}\" was specified.`\n        );\n      }\n    }\n  },\n});\n\nexport default FixedSizeList;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// @flow\n\n// Pulled from react-compat\n// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349\nexport default function shallowDiffers(prev: Object, next: Object): boolean {\n  for (let attribute in prev) {\n    if (!(attribute in next)) {\n      return true;\n    }\n  }\n  for (let attribute in next) {\n    if (prev[attribute] !== next[attribute]) {\n      return true;\n    }\n  }\n  return false;\n}\n","// @flow\n\nimport shallowDiffers from './shallowDiffers';\n\n// Custom comparison function for React.memo().\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-api.html#reactmemo\nexport default function areEqual(\n  prevProps: Object,\n  nextProps: Object\n): boolean {\n  const { style: prevStyle, ...prevRest } = prevProps;\n  const { style: nextStyle, ...nextRest } = nextProps;\n\n  return (\n    !shallowDiffers(prevStyle, nextStyle) && !shallowDiffers(prevRest, nextRest)\n  );\n}\n","// @flow\n\nimport areEqual from './areEqual';\nimport shallowDiffers from './shallowDiffers';\n\n// Custom shouldComponentUpdate for class components.\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-component.html#shouldcomponentupdate\nexport default function shouldComponentUpdate(\n  nextProps: Object,\n  nextState: Object\n): boolean {\n  return (\n    !areEqual(this.props, nextProps) || shallowDiffers(this.state, nextState)\n  );\n}\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_assertThisInitialized","self","ReferenceError","simpleIsEqual","newArgs","lastArgs","every","newArg","index","newValue","oldValue","resultFn","isEqual","lastThis","lastResult","calledOnce","_len","Array","_key","now","performance","Date","cancelTimeout","timeoutID","cancelAnimationFrame","id","IS_SCROLLING_DEBOUNCE_INTERVAL","defaultItemKey","data","createListComponent","getItemOffset","getItemSize","getEstimatedTotalSize","getOffsetForIndexAndAlignment","getStartIndexForOffset","getStopIndexForStartIndex","initInstanceProps","shouldResetStyleCacheOnItemSizeChange","validateProps","subClass","superClass","props","_instanceProps","_this","_outerRef","_innerRef","_resetIsScrollingTimeoutId","state","instance","isScrolling","scrollDirection","scrollOffset","initialScrollOffset","scrollUpdateWasRequested","_callOnItemsRendered","memoizeOne","overscanStartIndex","overscanStopIndex","visibleStartIndex","visibleStopIndex","onItemsRendered","_callOnScroll","onScroll","_getItemStyle","style","direction","itemSize","layout","itemStyleCache","_getItemStyleCache","offset","size","isHorizontal","offsetHorizontal","left","right","undefined","top","height","width","_","__","___","_onScrollHorizontal","event","currentTarget","clientWidth","scrollLeft","scrollWidth","setState","prevState","Math","max","min","_resetIsScrollingDebounced","_onScrollVertical","clientHeight","scrollHeight","scrollTop","_outerRefSetter","ref","outerRef","current","_innerRefSetter","innerRef","callback","delay","start","_resetIsScrolling","requestAnimationFrame","tick","create","constructor","__proto__","getDerivedStateFromProps","nextProps","validateSharedProps","scrollTo","scrollToItem","align","itemCount","componentDidMount","transform","_callPropsCallbacks","componentDidUpdate","componentWillUnmount","render","children","className","innerElementType","innerTagName","itemData","itemKey","outerElementType","outerTagName","useIsScrolling","_getRangeToRender","startIndex","stopIndex","items","push","createElement","position","WebkitOverflowScrolling","willChange","contain","backfaceVisibility","transformStyle","overscanCount","overscanBackward","overscanForward","PureComponent","defaultProps","getItemMetadata","instanceProps","itemMetadataMap","lastMeasuredIndex","itemMetadata","findNearestItemBinarySearch","high","low","middle","floor","currentOffset","findNearestItemExponentialSearch","interval","estimatedItemSize","totalSizeOfMeasuredItems","VariableSizeList","estimatedTotalSize","maxOffset","minOffset","round","findNearestItem","resetAfterIndex","shouldForceUpdate","forceUpdate","FixedSizeList","lastItemOffset","middleOffset","ceil","numVisibleItems","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","shallowDiffers","prev","next","attribute","areEqual","prevProps","prevStyle","prevRest","nextStyle","nextRest","nextState"],"mappings":"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"}